@page "/allads"
@using System.Collections.ObjectModel;
@using Gagger.Helpers;
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager


<PageTitle>Main</PageTitle>


<body class="yolo">
    <div style="overflow:scroll; height: 100%; overflow-x: hidden;" class="mainDiv">
        <table style="padding: 20px;" class="maintable">
            <tr>
                <td class="equalSize">
                </td>
                <td>
                    <div align="center" class="centerDiv" style=" background:#cccc00">
                        <!-- Adjust the height value as needed -->
                        <table width="80%" style="height: 100px;">
                            <tr>
                                <td align="center" style="padding-top: 20px;">
                                    <strong style="font-size: 25px;">Alle aktiven Anzeigen</strong>
                                </td>
                            </tr>
                            <tr>
                                <td align="center">
                                    <p style="font-size: 16px;">Aktuelle Seite: @pagePos</p>
                                </td>
                            </tr>
                            <tr>
                                <td align="left" style=" overflow: hidden">
                                    @{
                                        foreach (var elem in fullAdTypes)
                                        {
                                            <AdsTemplate Title="@elem.titleDe" Desc="@elem.description" Image="@elem.thumbnail" Id="@elem.tblAdID" />
                                        }
                                    }
                                </td>
                            </tr>
                        </table>
                    </div>
                </td>
                <td class="equalSize">
                </td>
            </tr>
        </table>
        <table style="width: 100%;">
            <tr>
                <td style="width: 50%; text-align:right;">
                    <button class="delete" @onclick="() => Move(false)">zurück</button>
                </td>
                <td style="width: 50%;">
                    <button hidden="@nextButtonInvisible" class="delete" @onclick="() => Move(true)">weiter</button>
                </td>
            </tr>
        </table>
    </div>
</body>


<style>

    .containeritem {
        margin-top: 10px;
        vertical-align: top;
        border: 2px solid #000;
        border-radius: 10px;
        width: 300px;
        padding-left: 10px;
        padding-right: 10px;
    }

    ul li a {
        text-decoration: none;
        color: #b61c1c; /* For Example */
    }

    .image {
        width: 100px;
    }

    .delete {
        margin-top: 10px;
        margin-left: 10px;
        border-radius: 10px;
    }

    .singleCat {
        margin-top: 10px;
        color: white;
        padding: 5px 10px 5px 10px;
        background-color: #7c7fe6;
        width: 250px;
        border-radius: 15px;
    }

    .selects {
        margin-left: 10px;
        margin-top: 10px;
    }

    .yolo {
        height: 91vh;
        background-image: linear-gradient(to right, #ff512f, #f09819);
    }



    .mainDiv {
        display: grid;
        height: 55vh;
        place-items: center;
    }

    .centerDiv {
        margin-top: 0px;
        border-radius: 10px;
        width: 100%;
        background-color: white;
        box-shadow: 10px 10px #262626;
        height: 750px; /*size of center */
        overflow: hidden;
        padding: 20px;
    }


        .centerDiv:hover {
            overflow: auto;
        }

    .maintable {
        width: 100%;
        height: 100px;
    }


    .spacer {
        height: 40px;
    }

    .equalSize {
        width: 25%;
    }
</style>


@code {

    List<Gagger.Data.Api.AdsApi.FullAdType> fullAdTypes = new List<Gagger.Data.Api.AdsApi.FullAdType>();
    List<Data.Api.AdImagesApi.AdImageType> Images = new List<Data.Api.AdImagesApi.AdImageType>();
    private int pagePos = 0;
    bool nextButtonInvisible = false;
    public static AllAds Instance;

    protected override async void OnInitialized()
    {
        Instance = this;
        base.OnInitialized();
        await GetAllAds();
        StateHasChanged();
    }

    private async void Move(bool forward)
    {
        if (forward)
        {
            pagePos++;
        }
        else
        {
            if (pagePos == 0) return; // cant go further back

            pagePos--;
        }

        await GetAllAds();
        StateHasChanged();
    }

    private async void DelteAd(string id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Sicher löschen? Das ist unumkehrbar!"); // Confirm

        if (confirmed)
        {
            // User clicked OK
            await Data.Api.AdsApi.DeleteAdById(id);
            await GetAllAds();
            StateHasChanged();
        }
        else
        {
            // User clicked Cancel
        }
    }

    public async void TheStateHasChanged()
    {
        StateHasChanged();
    }



    protected async Task GetAllAds()
    {
        fullAdTypes = await Data.Api.AdsApi.GetAllAds(pagePos * Constants.ELEMCOUNT, Helpers.Constants.ELEMCOUNT);

        if (fullAdTypes.Count < 5) nextButtonInvisible = true;
        else nextButtonInvisible = false;
    }





}

